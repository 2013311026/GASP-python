# YAML input file for Python GASP

# defines the composition or region of composition space to search, as a list of dictionaries of element symbol - amount pairs. Each dictionary is a composition
# after parsing this, we need to have some sort of check to make sure the endpoints are valid
# also, based on this, determine whether we are doing a phase diagram search or not (so we know which objective funtion to use)
CompositionSpace:
    # - C: 2
    #   Si: 1

    # - C: 1
    #   Si: 2
    
    #  - Al: 1 

    #  - Fe: 1 

    #  - Co: 1

    # - Au: 1

     - Al: 2
       O: 3


# says which energy code to use, and where the needed input files are. NOT optional
EnergyCode: # should only have one specified

     gulp: # TODO: the input files needed for gulp
          header_file: /n/srv/brevard/testing/gulp_testing/header_file  # the path to the header file
          potential_file: /n/srv/brevard/testing/gulp_testing/potential_file  # the path to the potential file
#
#	vasp:
#		incar: path to incar file
#		kpoints: path to kpoints file
#		potcars: # one for each element
#			C: path to C potcar file
#			Si: path to Si potcar file

#	lammps: # TODO: the input files needed for lammps



# the general constraints - entire  block is optional, and defaults will be used if it's omitted
#Constraints: 
#     min_num_atoms: 3
#     max_num_atoms: 10
#     min_lattice_length: 0.5
#     max_lattice_length: 20
#     min_lattice_angle: 40
#     max_lattice_angle: 140
#     allow_endpoints: False  # only gets applied when doing phase diagram searches, and only after the initial population. It specifies whether the end point compositions are permitted after the initial population
                             # default is True for phase diagram searches (should it be?)
#     per_species_mids:   # should default to all possible pairs (from composition space)
#          C C: 1.0 
#          C Si: 1.0
#          Si Si: 3.0



# specifies the geometries of the structures to search for. Optional (assumes bulk geometry if none specified)
#Geometry:
#     shape: bulk # <bulk|sheet|wire|cluster> defaults to bulk
#     max_size: 5  # a constraint on the size (in Angstroms, atom-to-atom), for non-bulk geometries. For sheet, it's the layer thickness, for wire and cluster, it's the diameter. Defaults to inf
#     min_size: 0  # constrains same quantities as max_size. Defaults to -inf
#     padding: 10   # the (actual - i.e. atom-to-atom) amount of vacuum padding to add around non-bulk geometries. Not used for bulk, and defaults to 10 angstroms for other geometries



#Niggli: True # whether to do Niggli cell reduction. Optional, and defaults to True. If used, handles other geometries (sheet, etc.) appropriately



#ScaleDensity: True # whether to scale the density before doing an energy calculation. If used, the density is set to the average of the densities of the organisms in the promotion set 
                   # Optional, and defaults to True. Density is only scaled for epa searches, regardless of whether this option is used or not in the input file


# The parameters to use for determining if two organisms are redundant. Entire block is optional and if not specified, does structural comparisons (with default tolerances), but not value comparisons
#RedundancyGuard: 
#     lattice_length_tol:   # fractional length tolerance (ltol argument of structure_matcher). Defaults to 0.1
#     lattice_angle_tol:    # angle tolerance in degrees (angle_tol argument of structure_matcher). Defaults to 2
#     site_tol:             # site tolerance - fraction of average free length per atom (stol argument of structure_matcher). Defaults to 0.1 	
#     use_primitive_cell:   # whether the structure matching algorithm takes the primitive cells of the structures before trying to match (primitive_cell argument of structure_matcher). Defaults to True
#     attempt_supercell:    # whether to check if structures are equivalent to supercells of each other, if they have different numbers of atoms. Defaults to True
#      epa_diff: 0.01             # for checking redundancy based on epa's. If used, two organisms are considered redundant if their epa's are within epa_diff of each other. Defaults to 0.0 



# The parameters for making the initial population. The entire block is optional and if not specified, makes 28 or 40 random organisms for epa and pd searches, respectively. Will also scale volumes to weighted average of elemental volumes
InitialPopulation:
     random:
          number: 20  # number of random structures to make
#          volume: 9  # volume per atom to scale the random structures to (cubic Angstroms per atom) 
                     # <num|random|from_elemental_densities> num - the number of cubic Angstroms per atom to scale to
                     #                                       random - no volume scaling - the volume is just the result of the random lattice vectors and atoms
                     #                                       from_elemental_densities - scales the volume to the weighted average of the volumes per atom of the elemental solids. This is default behavior

#     from_files:
#          path_to_folder: /n/srv/brevard/testing/gaspy_testing/initial_structures   # path to directory containing the poscar files. Structures are unpadded in the mainloop, so they can be padded in the files 

     # TODO: maybe include other options, like getting structures from a database or something



NumCalcsAtOnce: 10  # the max number of energy calculations to submit at once. Optional, and defaults to 1 (serial)
     

RunTitle: test # the title of run. Optional


# when the algorithm should stop the search. Optional, and defaults to 500 energy calcs for epa and 1000 energy calcs for pd
StoppingCriteria:
     num_energy_calcs: 500  # integer, the number of energy calculations to do before stopping. 
#     value_achieved: -3.5   # float, stop when a structure has been found with this or lower value
#     found_structure: /n/srv/brevard/Downloads/1T.cif   # path to poscar or cif file, stop when this structure has been found (to within some tolerance)



# specifies the variations to use to create offspring structures. Optional, and defaults to Mating (0.8), StructureMut (0.1), and NumStoichsMut (0.1)  
#Variations: 

     # entire sub block is optional
#     Mating:
#          fraction: 1.0         # the fraction of the offspring organisms created with this variation. NOT optional
#          mu_cut_loc: 0.5       # the average location of the cut, in fractional coordinates, along a randomly chosen lattice vector. Optional, and defaults to 0.5
#          sigma_cut_loc: 0.5    # the standard deviation of the location of the cut, in fractional coordinates, along a randomly chosen lattice vector. Optional, and defaults to TODO
#          shift_prob: 1.0      # the probability that the atoms in the parent structures will be shifted along the lattice vector of the cut prior to the cut being made. Optional, and defaults to 1.0
                                # note: the magnitude of the shift (in fractional coordinates) is drawn from a uniform distribution 
#          doubling_prob: 1.0    # probability of doubling one of the parent structures prior to mating. Optional, and defaults to TODO
#          grow_parents: True    # whether or not to grow the smaller parent (by taking supercell) to the approximate size the larger parent prior to doing the mating operation. Optional, and defaults to True 


     # entire sub block is optional
#     StructureMut:
#          fraction: 1.0                        # the fraction of the offspring organisms to create with this variation. NOT optional
#          frac_atoms_perturbed: 1.0            # the fraction of atoms in the cell that are perturbed on average. Optional, and defaults to TODO
#          sigma_atomic_coord_perturbation: 0.5 # the standard deviation of the atomic perturbations along each coordinate (in Angstroms). Optional, and defaults to TODO
#          max_atomic_coord_perturbation: 5.0   # the maximum allowed atomic perturbation along each coordinate (in Angstroms), Optional, and defaults to TODO
#          sigma_strain_matrix_element: 0.5     # the standard deviation of the non-identity components of the strain matrix elements. Optional, and defaults to TODO


     # entire sub block is optional
#     NumStoichsMut:
#          fraction: 1.0      # the fraction of the offspring organisms to create with this variation. NOT optional
#          mu_num_adds: 0     # mean number of stoichiometries worth of atoms to add. Optional, and defaults to 0
#          sigma_num_adds: 1  # standard deviation of the number of stoichiometries worth of atoms to add. Optional, and defaults to TODO
#          scale_volume: True # whether to scale of the volume (per atom) of the offspring to equal that of the parent. Defaults to True


     # entire sub block is optional
#     Permutation:
#          fraction: 1.0      # the fraction of the offspring organisms to create with this variation. NOT optional
#          mu_num_swaps: 2    # average number of swaps to do per cell. Optional, and defaults to TODO
#          sigma_num_swaps: 1 # the standard deviation of the number of swaps to do per cell. Optional, and defaults to TODO
#          pairs_to_swap:     # which pairs of atomic species to allow swapping. Optional, and defaults to all possible pairs within the composition space
#               - Al Fe        # for example...	
#               - Al Zn


# entire block is optional
Pool:
     size: 15   # total number of organisms in the pool. Optional, and defaults to 21 if epa or 30 if pd 
     num_promoted: 3  # the number of organisms in the promotion set. Optional, and defaults to 3.
                      # for phase diagram searching, this always includes the organisms on the convex hull (i.e., the provided value is ignored)

# entire block is optional
#Selection:
#     num_parents:   # the number of parents from the pool with non-zero selection probabilities. Optional, and defaults to pool.size
#     power:   # the exponent of the power law. Optional, and defaults to 1

